NAME
do nothing on empty input
INPUT
OUTPUT

NAME
delete all objects success
INPUT
new User("I_HATE_YEXT", 13425125123, null, null);
deleteAllObjects(Prims);
y
deleteAllObjects(User);
y
deleteAllObjects(Post);
y
getAllObjects(User);
getAllObjects(Prims);
getAllObjects(Post);
OUTPUT
[]
[]
[]

NAME
delete all objects, are you sure, no
INPUT
new User("I_HATE_YEXT", 13425125123, null, null);
deleteAllObjects(User);
no
getAllObjects(User);
OUTPUT
[
    {
        "username": "I_HATE_YEXT",
        "password": 13425125123,
        "bestFriend": "null",
        "data": "null"
    }
]

NAME
get class names
INPUT
getClassNames()
OUTPUT
[
    "Post",
    "Prims",
    "User"
]

NAME
get description
INPUT
getDesc(Post);
OUTPUT
{
    "content": "String",
    "owner": "User"
}

NAME
get all descriptions
INPUT
getAllDesc()
OUTPUT
{
    "Post": {
        "content": "String",
        "owner": "User"
    },
    "Prims": {
        "s": "String",
        "b": "byte",
        "sh": "short",
        "i": "int",
        "l": "long",
        "f": "float",
        "d": "double",
        "c": "char",
        "boo": "boolean"
    },
    "User": {
        "username": "String",
        "password": "long",
        "bestFriend": "User",
        "data": "Prims"
    }
}

NAME
get local variables
INPUT
String s;
String q = "your mom"
float f = 234.4e14;
Post p;
Post p2 = new Post("this is a post", null);
getLocalVariables();
OUTPUT
{
    "s": "",
    "q": "your mom",
    "f": "2.344E16",
    "p": "null",
    "p2": "Post@#"
}

NAME
get variables null
INPUT
Post this_is_null
getVariables(this_is_null);
OUTPUT
getVariables(this_is_null);
             ^
Error: getVariables() expects non-null parameter

NAME
get variables primitive
INPUT
int this_is_prim = 44;
getVariables(this_is_prim);
OUTPUT
getVariables(this_is_prim);
             ^
Error: getVariables() expects non-primitive parameter

NAME
get variables success on existing variable
INPUT
Post not_prim = new Post("this is a post", null);
getVariables(not_prim);
OUTPUT
{
    "content": "this is a post",
    "owner": "null"
}

NAME
get variables success on new variable
INPUT
getVariables(new Post("this is also a post", null));
OUTPUT
{
    "content": "this is also a post",
    "owner": "null"
}

NAME
delete class
INPUT
deleteClass(Post);
y
getClassNames();
getDesc(Post);
build(Post);
OUTPUT
[
    "Prims",
    "User"
]
getDesc(Post);
        ^
Error: expected class name but found unknown identifier

NAME
get all objects multiple
INPUT
new Post("fence post", null);
new Post("post office", new User("mailman", 13581501231231415, null, null));
new Post("shitpost", null);
getAllObjects(Post);
OUTPUT
[
    {
        "content": "fence post",
        "owner": "null"
    },
    {
        "content": "post office",
        "owner": "User@#"
    },
    {
        "content": "shitpost",
        "owner": "null"
    }
]

NAME
delete class, are you sure, no
INPUT
deleteClass(Post)
no
getDesc(Post);
OUTPUT
{
    "content": "String",
    "owner": "User"
}

NAME
delete class fail on dependency
INPUT
deleteClass(Prims)
OUTPUT
Error: cannot remove class because the following classes have objects of type Prims: User

NAME
rename class variable success
INPUT
Post gonna_rename = new Post("postman", null);
rename(Post.content, "data");
gonna_rename.data
gonna_rename.content;
getDesc(Post);
rename(Post.data, "content");
OUTPUT
"postman"
gonna_rename.content;
             ^
Error: content does not exist in class Post
{
    "data": "String",
    "owner": "User"
}

NAME
rename class variable fail on used variable name
INPUT
rename(User.username, "data");
OUTPUT
Error: User already has a variable named data

NAME
rename class variable fail on variable does not exist
INPUT
rename(Prims.fake_var, "real_var");
OUTPUT
rename(Prims.fake_var, "real_var");
             ^
Error: fake_var does not exist in class Prims

NAME
create local variable fail on class name
INPUT
User Prims = new User("primmy", 2e13, null, null);
OUTPUT
User Prims = new User("primmy", 2e13, null, null);
     ^
Error: JavaQL variables may not share names with classes

NAME
create local variable fail on used name
INPUT
String s_used;
int s_used = 335;
OUTPUT
int s_used = 335;
    ^
Error: variable s_used is already defined

NAME
create local variable success
INPUT
String local_succ;
float local_succ2 = 33e-5;
Post local_succ3 = new Post("Created succesfully", null);
OUTPUT

NAME
display local variable success on primitive
INPUT
String display_prim1;
String display_prim2 = "display";
byte display_prim3;
byte display_prim4 = -35;
short display_prim5;
short display_prim6 = 667;
int display_prim7;
int display_prim8 = -2100000000;
long display_prim9;
long display_prim10 = 42100000000;
char display_prim11;
char display_prim12 = 'z';
boolean display_prim13;
boolean display_prim14 = true;
float display_prim15;
float display_prim16 = -3.24e-1;
double display_prim17;
double display_prim18 = 3.5e300;
display_prim1;
display_prim2;
display_prim3;
display_prim4;
display_prim5;
display_prim6;
display_prim7;
display_prim8;
display_prim9;
display_prim10;
display_prim11;
display_prim12;
display_prim13;
display_prim14;
display_prim15;
display_prim16;
display_prim17;
display_prim18;
OUTPUT
""
"display"
0
-35
0
667
0
-2100000000
0
42100000000
''
'z'
false
true
0.0
-0.324
0.0
3.5E300
